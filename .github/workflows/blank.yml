# This is a basic workflow to help you get started with Actions

name: Blue-Green Strategy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  versioning-and-changelog:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Install dependancies
        run: |
          npm install
          npm install -g standard-version

      # Runs a set of commands using the runners shell
      - name: Generate version and changelog
        run: |
          standard-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: commit and push versioning  changes
        run: |
          git push --follow-tags origin main
        env: 
          ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: self-hosted
    needs: versioning-and-changelog
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: set up ssh
        run: |
          echo "${{secrets.SSH_PRIVATE_KEY}}" > ~`/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_BLUE_IP }}  >> ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.SERVER_GREEN_IP }}  >> ~/.ssh/known_hosts
          
      - name: Deploy to BLue
        run: |
          ssh ${{ secrets.DEPLOY_USER  }}@{{ secrets.SERVER_BLUE_IP }} <<EOF
            cd /path/toapp
            git pull origin main
            npm install
            npm run build
            pm2 restart app
          EOF
      - name: Deploy to Green
        run: |
          ssh ${{ secrets.DEPLOY_USER  }}@{{ secrets.SERVER_GREEN_IP }} <<EOF
            cd /path/toapp
            git pull origin main
            npm install
            npm run build
            pm2 restart app
          EOF
      - name: Test Green
        run: |
          curl -s http://${{ secrets.SERVER_GREEN_IP }}:3000/health || exit 1

      - name: Swap Traffic
        run: |
          curl -X POST githubALB-1596174961.us-east-1.elb.amazonaws.com/switch-green

      - name: Rollbcak to blue
        if: failure()
        run: |
          curl -X POST githubALB-1596174961.us-east-1.elb.amazonaws.com/switch-blue
          

          
      
  
